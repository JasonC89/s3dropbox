apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

defaultTasks 'clean', 'build'

version = '1.8.1'

mainClassName = 'com.tomczarniecki.s3.Main'

repositories {
  mavenCentral()
}

configurations.all {
  exclude(group: 'commons-logging')
  exclude(module: 'hamcrest-core')
}

dependencies {
  compile 'joda-time:joda-time:2.1'
  compile 'org.slf4j:slf4j-simple:1.6.6'

  compile 'commons-io:commons-io:2.4'
  compile 'commons-cli:commons-cli:1.2'
  compile 'commons-lang:commons-lang:2.6'

  compile 'com.jgoodies:forms:1.2.1'
  compile 'com.jgoodies:looks:2.2.2'

  compile 'com.amazonaws:aws-java-sdk:1.3.22'

  testCompile 'junit:junit:4.10'
  testCompile 'org.mockito:mockito-core:1.9.0'
  testCompile 'org.hamcrest:hamcrest-all:1.1'
  testCompile 'com.googlecode.windowlicker:windowlicker-swing:r268'
}

/*
task jetty(type: JavaExec, dependsOn: testClasses) {
  main = 'com.sun.jersey.spi.pico.container.servlet.WebServer'
  classpath = sourceSets.test.runtimeClasspath
}

ext.sharedManifest = manifest {
  attributes("Implementation-Title": project.name, "Implementation-Version": version)
}

jar {
  manifest = project.manifest {
    from sharedManifest
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
  manifest = project.manifest {
    from sharedManifest
  }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
  manifest = project.manifest {
    from sharedManifest
  }
}

task mavenPom(dependsOn: classes) {
  ext.pomPath = "$libsDir/pom.xml"
  ext.pomFile = file(pomPath)
  doLast {
    def pomDef = pom {
      groupId = 'com.watchitlater'
      artifactId = project.name
      version = project.version
    }
    pomDef.whenConfigured { pom ->
      pom.dependencies.find {dep -> dep.artifactId == 'servlet-api' }.optional = true
    }
    pomDef.writeTo(pomPath)
  }
}

task bundleZip(type: Zip, dependsOn: [jar, sourcesJar, javadocJar, mavenPom]) {
  includes = ['*.jar', '*.xml']
  from libsDir
}

artifacts {
  archives file: mavenPom.pomFile, builtBy: mavenPom
  archives sourcesJar
  archives javadocJar
  archives bundleZip
}
*/

task wrapper(type: Wrapper) {
  gradleVersion = '1.2'
}
